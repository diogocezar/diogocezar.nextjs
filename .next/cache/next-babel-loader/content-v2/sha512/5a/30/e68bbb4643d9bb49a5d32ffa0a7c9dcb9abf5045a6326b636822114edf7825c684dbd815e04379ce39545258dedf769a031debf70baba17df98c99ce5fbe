{"ast":null,"code":"import fs from \"fs\";\nimport matter from \"gray-matter\";\n\nconst getFilesFromFolder = folder => {\n  return fs.readdirSync(`${process.cwd()}/${folder}`);\n};\n\nconst getFileContent = file => {\n  console.log(`${process.cwd()}/${file}`);\n  const markdownData = fs.readFileSync(`${process.cwd()}/${file}`).toString();\n  return matter(markdownData);\n};\n\nconst getFolderContents = folder => {\n  const files = getFilesFromFolder(folder);\n  const folderContents = files.map(fileName => {\n    return getFileContent(`${folder}${fileName}`);\n  });\n  return folderContents;\n};\n\nexport { getFileContent, getFolderContents };","map":{"version":3,"sources":["/Users/diogocezar/www/diogocezar.nextjs/helpers/markdown.ts"],"names":["fs","matter","getFilesFromFolder","folder","readdirSync","process","cwd","getFileContent","file","console","log","markdownData","readFileSync","toString","getFolderContents","files","folderContents","map","fileName"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,kBAAkB,GAAIC,MAAD,IAAY;AACrC,SAAOH,EAAE,CAACI,WAAH,CAAgB,GAAEC,OAAO,CAACC,GAAR,EAAc,IAAGH,MAAO,EAA1C,CAAP;AACD,CAFD;;AAIA,MAAMI,cAAc,GAAIC,IAAD,IAAU;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAEL,OAAO,CAACC,GAAR,EAAc,IAAGE,IAAK,EAArC;AACA,QAAMG,YAAY,GAAGX,EAAE,CAACY,YAAH,CAAiB,GAAEP,OAAO,CAACC,GAAR,EAAc,IAAGE,IAAK,EAAzC,EAA4CK,QAA5C,EAArB;AACA,SAAOZ,MAAM,CAACU,YAAD,CAAb;AACD,CAJD;;AAMA,MAAMG,iBAAiB,GAAIX,MAAD,IAAY;AACpC,QAAMY,KAAK,GAAGb,kBAAkB,CAACC,MAAD,CAAhC;AACA,QAAMa,cAAc,GAAGD,KAAK,CAACE,GAAN,CAAWC,QAAD,IAAc;AAC7C,WAAOX,cAAc,CAAE,GAAEJ,MAAO,GAAEe,QAAS,EAAtB,CAArB;AACD,GAFsB,CAAvB;AAGA,SAAOF,cAAP;AACD,CAND;;AAQA,SAAST,cAAT,EAAyBO,iBAAzB","sourcesContent":["import fs from \"fs\";\nimport matter from \"gray-matter\";\n\nconst getFilesFromFolder = (folder) => {\n  return fs.readdirSync(`${process.cwd()}/${folder}`);\n};\n\nconst getFileContent = (file) => {\n  console.log(`${process.cwd()}/${file}`);\n  const markdownData = fs.readFileSync(`${process.cwd()}/${file}`).toString();\n  return matter(markdownData);\n};\n\nconst getFolderContents = (folder) => {\n  const files = getFilesFromFolder(folder);\n  const folderContents = files.map((fileName) => {\n    return getFileContent(`${folder}${fileName}`);\n  });\n  return folderContents;\n};\n\nexport { getFileContent, getFolderContents };\n"]},"metadata":{},"sourceType":"module"}