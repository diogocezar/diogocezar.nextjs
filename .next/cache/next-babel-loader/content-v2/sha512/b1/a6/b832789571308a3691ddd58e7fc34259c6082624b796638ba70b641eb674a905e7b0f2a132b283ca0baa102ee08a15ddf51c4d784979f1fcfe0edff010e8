{"ast":null,"code":"import fs from \"fs\";\nimport matter from \"gray-matter\";\n\nconst getFilesFromFolder = folder => {\n  return fs.readdirSync(`${process.cwd()}/${folder}`);\n};\n\nconst getFileContent = file => {\n  const markdownData = fs.readFileSync(`${process.cwd()}/${file}`).toString();\n  const {\n    content,\n    data,\n    isEmpty,\n    excerpt\n  } = matter(markdownData);\n  return {\n    content,\n    data,\n    isEmpty,\n    excerpt\n  };\n};\n\nconst getFolderContents = folder => {\n  const files = getFilesFromFolder(folder);\n  const folderContents = files.map(fileName => {\n    return getFileContent(`${folder}/${fileName}`);\n  });\n  return folderContents;\n};\n\nexport { getFileContent, getFolderContents };","map":{"version":3,"sources":["/Users/diogocezar/www/diogocezar.nextjs/helpers/markdown.ts"],"names":["fs","matter","getFilesFromFolder","folder","readdirSync","process","cwd","getFileContent","file","markdownData","readFileSync","toString","content","data","isEmpty","excerpt","getFolderContents","files","folderContents","map","fileName"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,kBAAkB,GAAIC,MAAD,IAAY;AACrC,SAAOH,EAAE,CAACI,WAAH,CAAgB,GAAEC,OAAO,CAACC,GAAR,EAAc,IAAGH,MAAO,EAA1C,CAAP;AACD,CAFD;;AAIA,MAAMI,cAAc,GAAIC,IAAD,IAAU;AAC/B,QAAMC,YAAY,GAAGT,EAAE,CAACU,YAAH,CAAiB,GAAEL,OAAO,CAACC,GAAR,EAAc,IAAGE,IAAK,EAAzC,EAA4CG,QAA5C,EAArB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAsCd,MAAM,CAACQ,YAAD,CAAlD;AACA,SAAO;AACLG,IAAAA,OADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA,OAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CATD;;AAWA,MAAMC,iBAAiB,GAAIb,MAAD,IAAY;AACpC,QAAMc,KAAK,GAAGf,kBAAkB,CAACC,MAAD,CAAhC;AACA,QAAMe,cAAc,GAAGD,KAAK,CAACE,GAAN,CAAWC,QAAD,IAAc;AAC7C,WAAOb,cAAc,CAAE,GAAEJ,MAAO,IAAGiB,QAAS,EAAvB,CAArB;AACD,GAFsB,CAAvB;AAGA,SAAOF,cAAP;AACD,CAND;;AAQA,SAASX,cAAT,EAAyBS,iBAAzB","sourcesContent":["import fs from \"fs\";\nimport matter from \"gray-matter\";\n\nconst getFilesFromFolder = (folder) => {\n  return fs.readdirSync(`${process.cwd()}/${folder}`);\n};\n\nconst getFileContent = (file) => {\n  const markdownData = fs.readFileSync(`${process.cwd()}/${file}`).toString();\n  const { content, data, isEmpty, excerpt } = matter(markdownData);\n  return {\n    content,\n    data,\n    isEmpty,\n    excerpt,\n  };\n};\n\nconst getFolderContents = (folder) => {\n  const files = getFilesFromFolder(folder);\n  const folderContents = files.map((fileName) => {\n    return getFileContent(`${folder}/${fileName}`);\n  });\n  return folderContents;\n};\n\nexport { getFileContent, getFolderContents };\n"]},"metadata":{},"sourceType":"module"}